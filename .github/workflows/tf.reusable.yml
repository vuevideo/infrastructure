name: Deploy resources using Terraform

on:
  workflow_call:
    inputs:
      environment:
        default: dev
        description: Environment to deploy in.
        required: true
        type: string

      infrastructure_path:
        description: Path of infrastructure to deploy
        required: true
        type: string

      backend-version:
        description: VueVideo Backend Version
        required: false
        type: string

      frontend-version:
        description: VueVideo Frontend Version
        required: false
        type: string

      deploy-flag:
        description: Either deploy or destroy resource
        default: true
        required: true
        type: boolean

jobs:
  tf_apply:
    name: Deploy resources using Terraform
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ${{ inputs.infrastructure_path }}
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      TF_VAR_backend_version: ${{ inputs.backend-version }}
      TF_VAR_frontend_version: ${{ inputs.frontend-version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.3'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/${{ vars.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.WIF_POOL }}/providers/${{ vars.WIF_PROVIDER }}'
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          install_components: 'gsutil'

      - name: Copy required TFVars File from GCS Bucket
        run: gsutil cp "${{ vars.TERRAFORM_TFVARS_PATH }}" terraform.tfvars

      - name: Terraform Initialization
        id: init
        run: terraform init --backend-config="bucket=${{ vars.TERRAFORM_BACKEND }}"

      - name: Deploying resources
        if: ${{ inputs.deploy-flag == true }}
        run: terraform apply -auto-approve

      - name: Deploying resources
        if: ${{ inputs.deploy-flag == false }}
        run: terraform destroy -auto-approve
