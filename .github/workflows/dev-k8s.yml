name: Deploy Resources onto the K8s Dev Cluster

on:
  workflow_run:
    workflows:
      - Deploy Resources onto the GCP Dev Project
    types:
      - completed
    branches:
      - feature/*/*
      - master

jobs:
  kubectl_secrets:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: k8s
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Authenticating with GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Authenticating with K8s Cluster
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ secrets.CLUSTER_NAME }}'
          location: '${{ secrets.CLUSTER_LOCATION }}'

      - name: Saving Secrets Locally
        run: |
          mkdir secrets
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' >> secrets/service-account.json

          echo "${{ secrets.FIREBASE_FRONTEND_ENV }}" >> secrets/frontend.env

      - name: Creating namespace
        run: |
          kubectl apply -f namespace.yaml

      - name: Applying secrets in K8s
        run: |
          kubectl create secret generic firebase-sa --from-file secrets/service-account.json --namespace vuevideo

          kubectl create secret generic firebase-config --from-env-file secrets/frontend.env --namespace vuevideo

  kubectl_apply:
    needs: kubectl_secrets
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: k8s
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Authenticating with GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Authenticating with K8s Cluster
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ secrets.CLUSTER_NAME }}'
          location: '${{ secrets.CLUSTER_LOCATION }}'

      - name: Creating namespace
        run: |
          kubectl apply -f namespace.yaml

      - name: Deploying server
        working-directory: ./k8s/server
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Deploying client
        working-directory: ./k8s/client
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
