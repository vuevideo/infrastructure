name: On Demand Deployment/Teardown of Infrastructure using Terraform

on:
  workflow_dispatch:
    inputs:
      resource:
        description: Resource to deploy/destroy
        type: choice
        default: apis
        options:
          - apis
          - firebase-project
          - k8s-network
          - k8s-cluster
          - k8s-node-pool
          - sql
          - vuevideo-backend
          - vuevideo-frontend
          - network-policy

      environment:
        description: Environment to deploy/destroy resources in
        type: environment
        required: true
        default: dev

      action:
        description: Deploy/destroy resource
        type: choice
        default: deploy
        options:
          - deploy
          - destroy

jobs:
  apis:
    name: APIs to enable
    if: ${{ inputs.resource == 'apis' }}
    uses: ./.github/workflows/tf.reusable.yml
    with:
      environment: ${{ inputs.environment }}
      infrastructure_path: terraform/infrastructure/apis
      deploy-flag: ${{ inputs.action == 'deploy' }}

  firebase-project:
    name: Create Firebase Project
    if: ${{ inputs.resource == 'firebase-project' }}
    uses: ./.github/workflows/tf.reusable.yml
    with:
      environment: ${{ inputs.environment }}
      infrastructure_path: terraform/infrastructure/firebase-project
      deploy-flag: ${{ inputs.action == 'deploy' }}

  k8s-network:
    name: Kubernetes Network Creation
    if: ${{ inputs.resource == 'k8s-network' }}
    uses: ./.github/workflows/tf.reusable.yml
    with:
      environment: ${{ inputs.environment }}
      infrastructure_path: terraform/infrastructure/k8s/network
      deploy-flag: ${{ inputs.action == 'deploy' }}

  k8s-cluster:
    name: Kubernetes Cluster Creation
    if: ${{ inputs.resource == 'k8s-cluster' }}
    uses: ./.github/workflows/tf.reusable.yml
    with:
      environment: ${{ inputs.environment }}
      infrastructure_path: terraform/infrastructure/k8s/cluster
      deploy-flag: ${{ inputs.action == 'deploy' }}

  k8s-node-pool:
    name: Kubernetes Node Pool Creation
    if: ${{ inputs.resource == 'k8s-node-pool' }}
    uses: ./.github/workflows/tf.reusable.yml
    with:
      environment: ${{ inputs.environment }}
      infrastructure_path: terraform/infrastructure/k8s/nodes
      deploy-flag: ${{ inputs.action == 'deploy' }}

  sql:
    name: Cloud SQL Server Creation
    if: ${{ inputs.resource == 'sql' }}
    uses: ./.github/workflows/tf.reusable.yml
    with:
      environment: ${{ inputs.environment }}
      infrastructure_path: terraform/infrastructure/sql
      deploy-flag: ${{ inputs.action == 'deploy' }}

  vuevideo-backend:
    name: VueVideo Backend Deployment
    if: ${{ inputs.resource == 'vuevideo-backend' }}
    uses: ./.github/workflows/tf.reusable.yml
    with:
      environment: ${{ inputs.environment }}
      infrastructure_path: k8s/server
      backend-version: ${{ vars.SERVER_VERSION }}
      deploy-flag: ${{ inputs.action == 'deploy' }}

  vuevideo-frontend:
    name: VueVideo Frontend Deployment
    if: ${{ inputs.resource == 'vuevideo-frontend' }}
    uses: ./.github/workflows/tf.reusable.yml
    with:
      environment: ${{ inputs.environment }}
      infrastructure_path: k8s/client
      frontend-version: ${{ vars.CLIENT_VERSION }}
      deploy-flag: ${{ inputs.action == 'deploy' }}

  network-policy:
    name: Kubernetes Network Policy
    if: ${{ inputs.resource == 'network-policy' }}
    uses: ./.github/workflows/tf.reusable.yml
    with:
      environment: ${{ inputs.environment }}
      infrastructure_path: k8s/network-policy
      deploy-flag: ${{ inputs.action == 'deploy' }}
